// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  firstName   String
  middleName  String?
  lastName    String
  username    String    @unique
  email       String    @unique
  role        UserRole  @default(USER)
  password    String
  isVerfiied  Boolean   @default(false)
  isLocked    Boolean   @default(false)
  description String?
  profile     String?
  mobile      String?
  post        Post[]
  like        Like[]
  comment     Comment[]
  Award       Award[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  picture     String
  isPublished Boolean   @default(false)
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  like        Like[]
  comment     Comment[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}

model Like {
  id         Int      @id @default(autoincrement())
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


}

model Comment {
  id         Int      @id @default(autoincrement())
  post       Post     @relation(fields: [postId], references: [id])
  comment    String
  postId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


}

model Award {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  date       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Views {
  id         Int      @id @default(autoincrement())
 
  count      Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

}

enum UserRole {
  ADMIN
  USER
  EDITOR
  INSPECTOR
}

enum Status {
  VIEWED
  APPROVED
  DISAPPROVED
}
